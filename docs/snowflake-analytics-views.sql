-- Snowflake Analytics Views for Banking Risk Platform
-- Run this in Snowflake to create views for Tableau dashboards

USE DATABASE BKRISK_DB;
USE SCHEMA CORE;

-- Main loan applications view with derived analytics fields
CREATE OR REPLACE VIEW V_LOAN_APPLICATIONS AS
SELECT 
    APPLICATION_ID,
    USER_ID,
    REVOLVING_UTILIZATION_OF_UNSECURED_LINES,
    AGE,
    NUMBER_OF_TIME_30_59_DAYS_PAST_DUE_NOT_WORSE,
    DEBT_RATIO,
    MONTHLY_INCOME,
    NUMBER_OF_OPEN_CREDIT_LINES_AND_LOANS,
    NUMBER_OF_TIMES_90_DAYS_LATE,
    NUMBER_REAL_ESTATE_LOANS_OR_LINES,
    NUMBER_OF_TIME_60_89_DAYS_PAST_DUE_NOT_WORSE,
    NUMBER_OF_DEPENDENTS,
    RISK_SCORE,
    DECISION,
    SHAP_VALUES,
    CREATED_AT,
    LOADED_AT,
    -- Derived analytics fields
    CASE WHEN DECISION = 'APPROVE' THEN 1 ELSE 0 END AS IS_APPROVED,
    CASE WHEN DECISION = 'DENY' THEN 1 ELSE 0 END AS IS_DENIED,
    CASE 
        WHEN RISK_SCORE > 0.5 THEN 'HIGH_RISK'
        WHEN RISK_SCORE > 0.2 THEN 'MEDIUM_RISK'
        ELSE 'LOW_RISK' 
    END AS RISK_CATEGORY,
    DATE(CREATED_AT) AS APPLICATION_DATE,
    YEAR(CREATED_AT) AS APPLICATION_YEAR,
    MONTH(CREATED_AT) AS APPLICATION_MONTH,
    DAYOFWEEK(CREATED_AT) AS APPLICATION_DAY_OF_WEEK,
    HOUR(CREATED_AT) AS APPLICATION_HOUR,
    -- Age groups for analysis
    CASE 
        WHEN AGE < 25 THEN '18-24'
        WHEN AGE < 35 THEN '25-34'
        WHEN AGE < 45 THEN '35-44'
        WHEN AGE < 55 THEN '45-54'
        ELSE '55+' 
    END AS AGE_GROUP,
    -- Income groups
    CASE 
        WHEN MONTHLY_INCOME < 3000 THEN 'Low Income (<$3K)'
        WHEN MONTHLY_INCOME < 6000 THEN 'Medium Income ($3K-$6K)'
        WHEN MONTHLY_INCOME < 10000 THEN 'High Income ($6K-$10K)'
        ELSE 'Very High Income (>$10K)' 
    END AS INCOME_GROUP,
    -- Debt ratio categories
    CASE 
        WHEN DEBT_RATIO < 0.2 THEN 'Low Debt (<20%)'
        WHEN DEBT_RATIO < 0.4 THEN 'Medium Debt (20-40%)'
        WHEN DEBT_RATIO < 0.6 THEN 'High Debt (40-60%)'
        ELSE 'Very High Debt (>60%)' 
    END AS DEBT_CATEGORY
FROM LOAN_APPLICATIONS;

-- Risk factors analysis view
CREATE OR REPLACE VIEW V_FACTORS AS
SELECT 
    APPLICATION_ID,
    RISK_SCORE,
    DECISION,
    CREATED_AT,
    APPLICATION_DATE,
    -- Extract individual SHAP values for analysis
    TRY_CAST(SHAP_VALUES[0][1] AS FLOAT) AS SHAP_REVOLVING_UTILIZATION,
    TRY_CAST(SHAP_VALUES[1][1] AS FLOAT) AS SHAP_AGE,
    TRY_CAST(SHAP_VALUES[2][1] AS FLOAT) AS SHAP_30_59_DAYS_PAST_DUE,
    TRY_CAST(SHAP_VALUES[3][1] AS FLOAT) AS SHAP_DEBT_RATIO,
    TRY_CAST(SHAP_VALUES[4][1] AS FLOAT) AS SHAP_MONTHLY_INCOME,
    TRY_CAST(SHAP_VALUES[5][1] AS FLOAT) AS SHAP_OPEN_CREDIT_LINES,
    TRY_CAST(SHAP_VALUES[6][1] AS FLOAT) AS SHAP_90_DAYS_LATE,
    TRY_CAST(SHAP_VALUES[7][1] AS FLOAT) AS SHAP_REAL_ESTATE_LOANS,
    TRY_CAST(SHAP_VALUES[8][1] AS FLOAT) AS SHAP_60_89_DAYS_PAST_DUE,
    TRY_CAST(SHAP_VALUES[9][1] AS FLOAT) AS SHAP_DEPENDENTS,
    -- Feature values
    REVOLVING_UTILIZATION_OF_UNSECURED_LINES,
    AGE,
    NUMBER_OF_TIME_30_59_DAYS_PAST_DUE_NOT_WORSE,
    DEBT_RATIO,
    MONTHLY_INCOME,
    NUMBER_OF_OPEN_CREDIT_LINES_AND_LOANS,
    NUMBER_OF_TIMES_90_DAYS_LATE,
    NUMBER_REAL_ESTATE_LOANS_OR_LINES,
    NUMBER_OF_TIME_60_89_DAYS_PAST_DUE_NOT_WORSE,
    NUMBER_OF_DEPENDENTS
FROM V_LOAN_APPLICATIONS;

-- Daily approval rates view
CREATE OR REPLACE VIEW V_DAILY_APPROVAL_RATES AS
SELECT 
    APPLICATION_DATE,
    COUNT(*) AS TOTAL_APPLICATIONS,
    SUM(IS_APPROVED) AS APPROVED_APPLICATIONS,
    SUM(IS_DENIED) AS DENIED_APPLICATIONS,
    ROUND(SUM(IS_APPROVED) * 100.0 / COUNT(*), 2) AS APPROVAL_RATE_PERCENT,
    ROUND(AVG(RISK_SCORE), 4) AS AVG_RISK_SCORE,
    ROUND(STDDEV(RISK_SCORE), 4) AS RISK_SCORE_STDDEV
FROM V_LOAN_APPLICATIONS
GROUP BY APPLICATION_DATE
ORDER BY APPLICATION_DATE DESC;

-- Risk score distribution view
CREATE OR REPLACE VIEW V_RISK_SCORE_DISTRIBUTION AS
SELECT 
    CASE 
        WHEN RISK_SCORE < 0.1 THEN '0.0-0.1'
        WHEN RISK_SCORE < 0.2 THEN '0.1-0.2'
        WHEN RISK_SCORE < 0.3 THEN '0.2-0.3'
        WHEN RISK_SCORE < 0.4 THEN '0.3-0.4'
        WHEN RISK_SCORE < 0.5 THEN '0.4-0.5'
        WHEN RISK_SCORE < 0.6 THEN '0.5-0.6'
        WHEN RISK_SCORE < 0.7 THEN '0.6-0.7'
        WHEN RISK_SCORE < 0.8 THEN '0.7-0.8'
        WHEN RISK_SCORE < 0.9 THEN '0.8-0.9'
        ELSE '0.9-1.0'
    END AS RISK_SCORE_BUCKET,
    COUNT(*) AS APPLICATION_COUNT,
    SUM(IS_APPROVED) AS APPROVED_COUNT,
    SUM(IS_DENIED) AS DENIED_COUNT,
    ROUND(SUM(IS_APPROVED) * 100.0 / COUNT(*), 2) AS APPROVAL_RATE_PERCENT
FROM V_LOAN_APPLICATIONS
GROUP BY RISK_SCORE_BUCKET
ORDER BY RISK_SCORE_BUCKET;

-- Top global risk factors view (aggregated SHAP values)
CREATE OR REPLACE VIEW V_GLOBAL_RISK_FACTORS AS
SELECT 
    'Revolving Utilization' AS FACTOR_NAME,
    ROUND(AVG(ABS(SHAP_REVOLVING_UTILIZATION)), 4) AS AVG_IMPACT,
    COUNT(*) AS APPLICATION_COUNT
FROM V_FACTORS
WHERE SHAP_REVOLVING_UTILIZATION IS NOT NULL

UNION ALL

SELECT 
    'Age' AS FACTOR_NAME,
    ROUND(AVG(ABS(SHAP_AGE)), 4) AS AVG_IMPACT,
    COUNT(*) AS APPLICATION_COUNT
FROM V_FACTORS
WHERE SHAP_AGE IS NOT NULL

UNION ALL

SELECT 
    '30-59 Days Past Due' AS FACTOR_NAME,
    ROUND(AVG(ABS(SHAP_30_59_DAYS_PAST_DUE)), 4) AS AVG_IMPACT,
    COUNT(*) AS APPLICATION_COUNT
FROM V_FACTORS
WHERE SHAP_30_59_DAYS_PAST_DUE IS NOT NULL

UNION ALL

SELECT 
    'Debt Ratio' AS FACTOR_NAME,
    ROUND(AVG(ABS(SHAP_DEBT_RATIO)), 4) AS AVG_IMPACT,
    COUNT(*) AS APPLICATION_COUNT
FROM V_FACTORS
WHERE SHAP_DEBT_RATIO IS NOT NULL

UNION ALL

SELECT 
    'Monthly Income' AS FACTOR_NAME,
    ROUND(AVG(ABS(SHAP_MONTHLY_INCOME)), 4) AS AVG_IMPACT,
    COUNT(*) AS APPLICATION_COUNT
FROM V_FACTORS
WHERE SHAP_MONTHLY_INCOME IS NOT NULL

UNION ALL

SELECT 
    'Open Credit Lines' AS FACTOR_NAME,
    ROUND(AVG(ABS(SHAP_OPEN_CREDIT_LINES)), 4) AS AVG_IMPACT,
    COUNT(*) AS APPLICATION_COUNT
FROM V_FACTORS
WHERE SHAP_OPEN_CREDIT_LINES IS NOT NULL

UNION ALL

SELECT 
    '90+ Days Late' AS FACTOR_NAME,
    ROUND(AVG(ABS(SHAP_90_DAYS_LATE)), 4) AS AVG_IMPACT,
    COUNT(*) AS APPLICATION_COUNT
FROM V_FACTORS
WHERE SHAP_90_DAYS_LATE IS NOT NULL

UNION ALL

SELECT 
    'Real Estate Loans' AS FACTOR_NAME,
    ROUND(AVG(ABS(SHAP_REAL_ESTATE_LOANS)), 4) AS AVG_IMPACT,
    COUNT(*) AS APPLICATION_COUNT
FROM V_FACTORS
WHERE SHAP_REAL_ESTATE_LOANS IS NOT NULL

UNION ALL

SELECT 
    '60-89 Days Past Due' AS FACTOR_NAME,
    ROUND(AVG(ABS(SHAP_60_89_DAYS_PAST_DUE)), 4) AS AVG_IMPACT,
    COUNT(*) AS APPLICATION_COUNT
FROM V_FACTORS
WHERE SHAP_60_89_DAYS_PAST_DUE IS NOT NULL

UNION ALL

SELECT 
    'Dependents' AS FACTOR_NAME,
    ROUND(AVG(ABS(SHAP_DEPENDENTS)), 4) AS AVG_IMPACT,
    COUNT(*) AS APPLICATION_COUNT
FROM V_FACTORS
WHERE SHAP_DEPENDENTS IS NOT NULL

ORDER BY AVG_IMPACT DESC;

-- Grant permissions for Tableau access
GRANT SELECT ON VIEW V_LOAN_APPLICATIONS TO ROLE PUBLIC;
GRANT SELECT ON VIEW V_FACTORS TO ROLE PUBLIC;
GRANT SELECT ON VIEW V_DAILY_APPROVAL_RATES TO ROLE PUBLIC;
GRANT SELECT ON VIEW V_RISK_SCORE_DISTRIBUTION TO ROLE PUBLIC;
GRANT SELECT ON VIEW V_GLOBAL_RISK_FACTORS TO ROLE PUBLIC;
